# نام Workflow که در تب Actions نمایش داده می‌شود
name: Android Build CI

# تعریف تریگر: این Workflow چه زمانی اجرا شود
on:
  # هر بار که کدی به شاخه main پوش شود
  push:
    branches: [ "main" ]
  # همچنین به شما اجازه می‌دهد این Workflow را به صورت دستی اجرا کنید
  workflow_dispatch:

# تعریف کارها (Jobs)
jobs:
  build:
    # استفاده از یک ماشین مجازی اوبونتو برای اجرا
    runs-on: ubuntu-latest

    # مراحل اجرای کار
    steps:
      # مرحله ۱: دریافت کد از ریپازیتوری
      - name: Checkout code
        uses: actions/checkout@v4

      # مرحله ۲: نصب جاوا (JDK 17) که برای پروژه‌های جدید اندروید لازم است
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # مرحله ۳: کش کردن Gradle برای افزایش سرعت بیلدهای بعدی
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # مرحله ۴: دادن دسترسی اجرایی به فایل Gradle Wrapper
      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      # مرحله ۵: اجرای دستور کامپایل و ساخت APK نسخه Debug
      - name: Build with Gradle
        run: ./gradlew assembleDebug

      # مرحله ۶: آپلود فایل APK ساخته شده به عنوان Artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk # نام فایلی که آپلود می‌شود
          path: app/build/outputs/apk/debug/app-debug.apk # مسیر فایل APK
